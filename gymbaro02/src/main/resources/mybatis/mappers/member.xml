<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<resultMap type="MemberVO" id="memberResult">
		<result property="uid" column="uid" />
		<result property="member_id" column="member_id" />
		<result property="member_pwd" column="member_pwd" />
		<result property="member_name" column="member_name" />
		<result property="member_gender" column="member_gender" />
		
		<result property="member_type" column="member_type" />
		<result property="member_level" column="member_level" />
		<result property="member_point" column="member_point" />
		
		<result property="phone_number" column="phone_number" />
		<result property="email" column="email" />
		<result property="pwdFindQ" column="pwdFindQ" />
		<result property="pwdFindA" column="pwdFindA" />
		
		<result property="zipcode" column="zipcode" />
		<result property="roadAddress" column="roadAddress" />
		<result property="jibunAddress" column="jibunAddress" />
		<result property="extraAddress" column="extraAddress" />
		
		<result property="info_yn" column="info_yn" />
		<result property="joinDate" column="joinDate" />
		<result property="gym_license" column="gym_license" />
		<result property="SALT" column="SALT" />
	</resultMap>


<select id="login" parameterType="java.util.Map" resultMap="memberResult">
	select * from member where member_id = #{id} and member_pwd = #{pwd}
</select>

<select id="getSaltbyId" parameterType="String" resultType="String">
	select SALT from member where member_id = #{id}
</select>

<insert id="insertNewMember" parameterType="memberVO">
	<selectKey resultType="int" keyProperty="uid" order="BEFORE">
	    	select case count(*) when 0 then 1 else max(uid) + 1 end from member
	</selectKey>
	<![CDATA[
			insert into member(
				uid,
				member_id,
				member_pwd,
				member_name,
				member_gender,
				member_type,
				member_level,
				member_point,
				phone_number,
				email,
				pwdFindQ,
				pwdFindA,
				zipcode,
				roadAddress,
				jibunAddress,
				extraAddress,
				info_yn,
				gym_license,
				SALT				
			) values(
				#{uid},
				#{member_id},
				#{member_pwd},
				#{member_name},
				#{member_gender},
				#{member_type},
				#{member_level},
				#{member_point},
				#{phone_number},
				#{email},
				#{pwdFindQ},
				#{pwdFindA},
				#{zipcode},
				#{roadAddress},
				#{jibunAddress},
				#{extraAddress},
				#{info_yn},
				#{gym_license},
				#{SALT}				
			)
	]]>
</insert>

<select id="selectOverlappedID" parameterType="String" resultType="String">
	   select if(count(*)>0, 'true', 'false')
	   from member
	   where member_id = #{id}
</select>
	
</mapper>